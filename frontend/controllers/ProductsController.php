<?php

namespace frontend\controllers;

use common\models\Element;
use common\models\Section;
use yii\web\Response;

class ProductsController extends \yii\web\Controller
{

    public function beforeAction($action)
    {
        \Yii::$app->request->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionSend()
    {
        $this->enableCsrfValidation = false;
        $data = \Yii::$app->request->post();

        preg_match('/^[A-Za-z]*$/', $data["PROP_NAME"], $nameMatches);
        $new_array = array_filter($nameMatches);
        if (count($new_array)) {
            return $this->redirect(\Yii::$app->request->referrer);
        }
        preg_match('/^79[\d]{9}$/', str_replace(['+', '-', ' ', '(', ')'], "", $data["PROP_PHONE"]), $phoneMatches);
        if (count($phoneMatches) === 0) {
            return $this->redirect(\Yii::$app->request->referrer);
        }

        $model = Element::findOne($data['PROP_PRODUCT_ID']);
        \Yii::$app->mailer
            ->compose('technic-invite', [
                'data' => $data,
                'model' => $model,
            ])
            ->setFrom(\Yii::$app->params['adminEmail'])
            ->setTo(\Yii::$app->params['companyEmail'])
            ->setSubject('Заявка на технику')
            ->send();
        return $this->redirect(['/site/index']);
    }

    public function actionIndex()
    {
        return $this->render('index', [
            'models' => Section::find()->where(['parent_id' => null])->andWhere(['type' => Section::TYPE_CATALOG])->orderBy(['id' => SORT_ASC, 'sort' => SORT_ASC])->all()
        ]);
    }

    public function actionView($code, $element = null)
    {
        $model = Section::findOne(['code' => $code]);

        return $this->render('view', [
            'model' => $model
        ]);
    }

    public function actionElement($code, $parent = null)
    {
        $this->layout = "main";
//        $parent = Section::findOne(['code' => $parent]);
        $model = Element::findOne(['code' => $code]);

        return $this->render('element', [
            'model' => $model,
            'parent' => $model->section,
        ]);
    }

    public function actionAjax($id)
    {
        $this->response->format = Response::FORMAT_JSON;
        $model = Element::findOne($id);
        return $model;
    }
}
